library(SticsRFiles)
library(SticsOnR)
library(SticsOptimizR)
library(dplyr)

# Test case 1c
obs_list=read_obs_to_list("D:/Home/sbuis/Documents/GitHub/SticsOptimizR/Preliminary work/Data/TestCase1c/Orig Data")
model_options=list(stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo",
  data_dir="D:/Home/sbuis/Documents/GitHub/SticsOptimizR/Preliminary work/Data/TestCase1c")
res_sim_list=stics_wrapper(param_values=NULL,sit_var_dates=obs_list, model_options=model_options)
list_obs_sim=intersect_sim_obs(res_sim_list$sim_list,obs_list)
concentrated_wss(list_obs_sim$sim_list,list_obs_sim$obs_list)


# Tests concentrated_wss

obs_list=read_obs_to_list("D:/Home/sbuis/Documents/GitHub/SticsOptimizR/Preliminary work/Data/TestCase1c/Orig Data")
model_options=list()
model_options$stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"
model_options$data_dir="D:/Home/sbuis/Documents/GitHub/SticsOptimizR/Preliminary work/Data/TestCase1c"
res_sim_list=stics_wrapper(param_values=NULL,sit_var_dates=obs_list, model_options=model_options)
list_obs_sim=intersect_sim_obs(res_sim_list$sim_list,obs_list)

## should return 0
concentrated_wss(list_obs_sim$sim_list,list_obs_sim$sim_list)

## should return 2
obs_list=list()
obs_list[["sit1"]]=list_obs_sim$obs_list[["lu97iN+"]] %>% slice(1:4)
obs_list[["sit1"]][1:4,"lai_n"]=1
obs_list[["sit1"]][1:4,"mafruit"]=c(NA,NA,NA,2)

sim_list=obs_list
sim_list[["sit1"]][1:4,"lai_n"]=2
sim_list[["sit1"]][1:4,"mafruit"]=c(NA,NA,NA,4)

concentrated_wss(sim_list,obs_list)


# Teat main_optim WITHOUT GROUPS OF SITUATIONS PER PARAMETER
library(nloptr)

# boundaries for the different USM groups must be put in a vector within the list
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
					   ub=c(dlaimax=0.0025, durvieF=400))

model_options=list()
model_options$stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"
model_options$data_dir="D:/Home/sbuis/Documents/GitHub/SticsOptimizR/Preliminary work/Data/TestCase1c"

optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 3 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs

obs_list=read_obs_to_list("D:/Home/sbuis/Documents/GitHub/SticsOptimizR/Preliminary work/Data/TestCase1c/Orig Data")

main_optim(obs_list=obs_list,crit_function=concentrated_wss,model_function=stics_wrapper,model_options=model_options,optim_options=optim_options,prior_information=prior_information)



# Teat main_optim WITH GROUPS OF SITUATIONS PER PARAMETER
library(nloptr)

# boundaries for the different USM groups must be put in a vector within the list
prior_information=list()
prior_information$dlaimax=list(sit_list=list(c("bou99t3", "bou00t3", "bou99t1", "bou00t1", "bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+")),lb=0.0005,ub=0.0025)
prior_information$durvieF=list(sit_list=list(c("bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+"), c("bou99t3", "bou00t3", "bou99t1", "bou00t1")),lb=c(50,50),ub=c(400,400))

model_options=list()
model_options$stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"
model_options$data_dir="D:/Home/sbuis/Documents/GitHub/SticsOptimizR/Preliminary work/Data/TestCase1c"

optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 3 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs

obs_list=read_obs_to_list("D:/Home/sbuis/Documents/GitHub/SticsOptimizR/Preliminary work/Data/TestCase1c/Orig Data")

main_optim(obs_list=obs_list,crit_function=concentrated_wss,model_function=stics_wrapper,model_options=model_options,optim_options=optim_options,prior_information=prior_information)
