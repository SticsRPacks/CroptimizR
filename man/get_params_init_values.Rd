% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_params_init_values.R
\name{get_params_init_values}
\alias{get_params_init_values}
\title{Extract parameter initial values from prior information}
\usage{
get_params_init_values(prior_information)
}
\arguments{
\item{prior_information}{Prior information on the parameters to estimate.
For the moment only uniform distribution are allowed.
Either
a list containing:
\itemize{
\item (named) vectors of upper and lower bounds (\code{ub} and \code{lb}),
\item \code{init_values}, A data.frame containing initial
values to test for the parameters (optional, if not provided (or if less values
than number of repetitions of the minimization are provided), the (or part
of the) initial values will be randomly generated using LHS sampling within
parameter bounds.
or
a named list containing for each parameter the list of situations per group
(\code{sit_list}), the vector of upper and lower bounds (one value per group)
(\code{ub} and \code{lb}) and the list of initial values per group
\code{init_values} (data.frame, one column per group).
}}
}
\value{
A dataframe containing initial values for the different parameters to
estimated (one column per parameter)
}
\description{
Extract parameter initial values from prior information
}
\examples{
\dontrun{
# Simple cases
prior_information=list(init_values=c(dlaimax=0.001, durvieF=200),
                       lb=c(dlaimax=0.0001, durvieF=50),
                       ub=c(dlaimax=0.01, durvieF=400))
get_params_init_values(prior_information)

prior_information=list(init_values=data.frame(dlaimax=c(0.001,0.002), durvieF=c(50,200)),
                       lb=c(dlaimax=0.0001, durvieF=50),
                       ub=c(dlaimax=0.01, durvieF=400))
get_params_init_values(prior_information)

Cases with groups of situations per parameter
prior_information=list()
prior_information$dlaimax=list(sit_list=list(c("bou99t3", "bou00t3", "bou99t1", "bou00t1",
                                               "bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+")),
                               init_values=0.001,lb=0.0001,ub=0.1)
prior_information$durvieF=list(sit_list=list(c("bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+"),
                                             c("bou99t3", "bou00t3", "bou99t1", "bou00t1")),
                               init_values=c(200,300),lb=50,ub=400)
get_params_init_values(prior_information)

prior_information=list()
prior_information$dlaimax=list(sit_list=list(c("bou99t3", "bou00t3", "bou99t1", "bou00t1",
                                               "bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+")),
                               init_values=c(0.001,0.002),lb=0.0001,ub=0.1)
prior_information$durvieF=list(sit_list=list(c("bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+"),
                                             c("bou99t3", "bou00t3", "bou99t1", "bou00t1")),
                               init_values=data.frame(c(200,300),c(250,350)),lb=50,ub=400)
CroptimizR:::get_params_init_values(prior_information)
}

}
\keyword{internal}
