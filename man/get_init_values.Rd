% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/param_info_functions.R
\name{get_init_values}
\alias{get_init_values}
\title{Extract parameter initial values from parameter information}
\usage{
get_init_values(param_info)
}
\arguments{
\item{param_info}{Information on the parameters to estimate.
Either
a list containing:
\itemize{
\item \code{ub} and \code{lb}, named vectors of upper and lower bounds (-Inf and Inf can be used if init_values is provided),
\item \code{default}, named vectors of default values (optional, corresponding parameters are set to their default value when the parameter is part of the \code{candidate_param} list and when it is not estimated ; the default values are also used as first initial values when the parameters are estimated)
\item \code{init_values}, a data.frame containing initial
values to test for the parameters (optional, if not provided, or if less values
than number of repetitions of the minimization are provided, the, or part
of the, initial values will be randomly generated using LHS sampling within
parameter bounds).
}

or a named list containing for each parameter:
\itemize{
\item \code{sit_list}, list the groups of situations for which the current estimated
parameter must take different values (see \href{https://sticsrpacks.github.io/CroptimizR/articles/Parameter_estimation_Specific_and_Varietal.html}{here}
for an example),
\item \code{ub} and \code{lb}, vectors of upper and lower bounds (one value per group),
\item \code{init_values}, the list of initial values per group  (data.frame, one column per group, optional).
\item \code{default}, vector of default values per group (optional, the parameter is set to its default value when it is part of the \code{candidate_param} list and when it is not estimated ; the default value is also used as first initial value when the parameter is estimated)
}}
}
\value{
A dataframe containing initial values for the different parameters to
estimated (one column per parameter)
}
\description{
Extract parameter initial values from parameter information
}
\examples{
\donttest{
# Simple cases
param_info <- list(
  init_values = c(dlaimax = 0.001, durvieF = 200),
  lb = c(dlaimax = 0.0001, durvieF = 50),
  ub = c(dlaimax = 0.01, durvieF = 400)
)
CroptimizR:::get_init_values(param_info)

param_info <- list(
  init_values = data.frame(dlaimax = c(0.001, 0.002), durvieF = c(50, 200)),
  lb = c(dlaimax = 0.0001, durvieF = 50),
  ub = c(dlaimax = 0.01, durvieF = 400)
)
CroptimizR:::get_init_values(param_info)

# Cases with groups of situations per parameter
param_info <- list()
param_info$dlaimax <- list(
  sit_list = list(c(
    "bou99t3", "bou00t3", "bou99t1", "bou00t1",
    "bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+"
  )),
  init_values = 0.001, lb = 0.0001, ub = 0.1
)
param_info$durvieF <- list(
  sit_list = list(
    c("bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+"),
    c("bou99t3", "bou00t3", "bou99t1", "bou00t1")
  ),
  init_values = c(200, 300), lb = 50, ub = 400
)
CroptimizR:::get_init_values(param_info)

param_info <- list()
param_info$dlaimax <- list(
  sit_list = list(c(
    "bou99t3", "bou00t3", "bou99t1", "bou00t1",
    "bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+"
  )),
  init_values = c(0.001, 0.002), lb = 0.0001, ub = 0.1
)
param_info$durvieF <- list(
  sit_list = list(
    c("bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+"),
    c("bou99t3", "bou00t3", "bou99t1", "bou00t1")
  ),
  init_values = data.frame(c(200, 300), c(250, 350)), lb = 50, ub = 400
)
CroptimizR:::get_init_values(param_info)
}

}
\keyword{internal}
