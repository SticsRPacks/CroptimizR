% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_optim.R
\name{main_optim}
\alias{main_optim}
\title{main function for parameter estimation}
\usage{
main_optim(obs_list, crit_function = log_concentrated_wss,
  model_function, model_options = NULL, optim_method = "simplex",
  optim_options = NULL, prior_information)
}
\arguments{
\item{obs_list}{List of observed values}

\item{crit_function}{Function implementing the criterion to optimize
(optional, default=log_concentrated_wss)}

\item{model_function}{Crop Model wrapper function}

\item{model_options}{List of options for the Crop Model wrapper (optional,
see help of the Crop Model wrapper used)}

\item{optim_method}{Name of the parameter estimation method (optional,
see help of optim_switch function)}

\item{optim_options}{List of options of the parameter estimation method:
\code{nb_rep}, the number of repetitions (optional, default=1)
(see help of optim_switch function))}

\item{prior_information}{Prior information on the parameters to estimate.
For the moment only uniform distribution are allowed.
Either
a list containing:
\itemize{
\item (named) vectors of upper and lower bounds (\code{ub} and \code{lb}),
\item \code{init_values}, A (column named) vector or data.frame containing initial
values to test for the parameters (optional, if not provided (or if less values
than number of repetitions of the minimization are provided), the (or part
of the) initial values will be randomly generated using LHS sampling within
parameter bounds.
or
a named list containing for each parameter the list of situations per group
(\code{sit_list}), the vector of upper and lower bounds (one value per group)
(\code{ub} and \code{lb}) and the list of initial values per group
\code{init_values} (vector or data.frame, one column per group).
}}

\item{param_names}{Name(s) of parameters to estimate}
}
\value{
prints, graphs and a list containing the results of the parameter estimation.
which content depends on the method used.
}
\description{
main function for parameter estimation
}
\examples{

library(SticsRFiles)
library(SticsOnR)
library(SticsOptimizR)
library(dplyr)
library(nloptr)
library(DiceDesign)
library("doParallel")


# TEST ON ONE SITUATION and ONE VARIABLE

# Select situation and variable
sit_name="bo96iN+"
var_name="lai_n"

# Run the model before optimization for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)

# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
                          obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]

# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
                       ub=c(dlaimax=0.0025, durvieF=400),
                       init_values=data.frame(dlaimax=c(0.0015), durvieF=c(225)))

# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 5 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs

# Run the optimization
optim_results=main_optim(obs_list=obs_list,
                         model_function=stics_wrapper,
                         model_options=model_options,
                         optim_options=optim_options,
                         prior_information=prior_information)

# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=optim_results$final_values,
                              model_options=model_options)

# Plot the results
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
         max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
     main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
     main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")


# TEST WITH SEVERAL SITUATIONS AND USING GROUPS OF SITUATIONS PER PARAMETER

prior_information=list()
prior_information$dlaimax=list(sit_list=list(c("bou99t3", "bou00t3", "bou99t1", "bou00t1", "bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+")),
                               lb=0.0005,ub=0.0025,
                               init_values=0.001)
prior_information$durvieF=list(sit_list=list(c("bo96iN+", "lu96iN+", "lu96iN6", "lu97iN+"), c("bou99t3", "bou00t3", "bou99t1", "bou00t1")),
                               lb=c(50,50),ub=c(400,400),
                               init_values=c(200,300))

stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir, parallel=TRUE)

optim_options=list()
optim_options$nb_rep=2                              # How many times we run the minimization with different parameters
optim_options$xtol_rel=1e-05                        # Tolerance criterion between two iterations
optim_options$maxeval=3                             # Maximum number of iterations executed by the function
optim_options$path_results=model_options$data_dir   # path where to store results graphs

obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"))

optim_results=main_optim(obs_list=obs_list, model_function=stics_wrapper,
                         model_options=model_options,
                         optim_options=optim_options,
                         prior_information=prior_information)

}
