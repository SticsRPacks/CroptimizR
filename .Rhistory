optim_options=list()
optim_options$nb_rep=2                              # How many times we run the minimization with different parameters
optim_options$xtol_rel=1e-05                        # Tolerance criterion between two iterations
optim_options$maxeval=3                             # Maximum number of iterations executed by the function
optim_options$path_results=model_options$data_dir   # path where to store results graphs
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"))
main_optim(obs_list=obs_list,crit_function=concentrated_wss,model_function=stics_wrapper,model_options=model_options,optim_options=optim_options,prior_information=prior_information)
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimzation for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Plot comparison between simulations and observations before optimization
dev.new()
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",main="Before optimization")
points(obs_list[[sit_name]],col="green")
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 1 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 5 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimzation for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Plot comparison between simulations and observations before optimization
dev.new()
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",main="Before optimization")
points(obs_list[[sit_name]],col="green")
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005),
ub=c(dlaimax=0.0025))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 1 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 5 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
? main_optim
? main_optim
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimzation for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Plot comparison between simulations and observations before optimization
dev.new()
par(mfrow = c(1,2))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",main="Before optimization")
points(obs_list[[sit_name]],col="green")
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
dev.new()
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",main="After optimization")
points(obs_list[[sit_name]],col="green")
ylim()
? ylim
? main_optim
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimzation for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Plot comparison between simulations and observations before optimization
dev.new()
par(mfrow = c(1,2))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",main="Before optimization")
points(obs_list[[sit_name]],col="green")
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
dev.new()
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",main="After optimization")
points(obs_list[[sit_name]],col="green")
p=plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",main="After optimization")
print(p)
plot(p)
#' dev.new()
#' par(mfrow = c(1,2))
#' Ymax=max(max(obs_list[[sit_name]][,var_name]),
#'          max(sim_before_optim$sim_list[[sit_name]][,var_name]))
#' plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
#'      main="Before optimization",ylim(0,Ymax+Ymax*0.1))
#' points(obs_list[[sit_name]],col="green")
#' plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
#'      main="After optimization",ylim(0,Ymax+Ymax*0.1))
#' points(obs_list[[sit_name]],col="green")
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name]),
max(sim_before_optim$sim_list[[sit_name]][,var_name]))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
? main_optim
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimization for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Plot comparison between simulations and observations before optimization
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name]),
max(sim_before_optim$sim_list[[sit_name]][,var_name]))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
Ymax
? max
? main_optim
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimization for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Plot comparison between simulations and observations before optimization
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
+      main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
> points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimization for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Plot comparison between simulations and observations before optimization
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
? main_optim
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimization for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
? main_optim
? main_optim
library(SticsOptimizR)
? main_optim
library(SticsRFiles)
library(SticsOnR)
library(SticsOptimizR)
library(dplyr)
library(nloptr)
library(DiceDesign)
library("doParallel")
# TEST ON ONE SITUATION and ONE VARIABLE
# Select situation and variable
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimization for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
library(SticsRFiles)
library(SticsOnR)
library(SticsOptimizR)
library(dplyr)
library(nloptr)
library(DiceDesign)
library("doParallel")
# TEST ON ONE SITUATION and ONE VARIABLE
# Select situation and variable
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimization for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
# Read and select the corresponding observations
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
model_options
stics_wrapper(model_options=model_options)
library(SticsOnR)
stics_wrapper(model_options=model_options)
library(SticsRFiles)
library(SticsOnR)
library(SticsOptimizR)
library(dplyr)
library(nloptr)
library(DiceDesign)
library("doParallel")
# TEST ON ONE SITUATION and ONE VARIABLE
# Select situation and variable
sit_name="bo96iN+"
var_name="lai_n"
# Run the model before optimization for a prior evaluation
stics_path="D:/Home/sbuis/Documents/WORK/STICS/JavaSTICS-1.41-stics-9.0/bin/stics_modulo"  # TO ADAPT TO YOUR CASE :-) ###
data_dir=system.file(file.path("extdata","TestCase1c"), package = "SticsOptimizR")
model_options=stics_wrapper_options(stics_path,data_dir,parallel=FALSE)
sim_before_optim=stics_wrapper(model_options=model_options)
obs_list=read_obs_to_list(file.path(model_options$data_dir,"Orig Data"),
obs_filenames = paste0(sit_name,".obs"))
obs_list[[sit_name]]=obs_list[[sit_name]][,c("Date",var_name)]
# Set prior information on the parameters to estimate
prior_information=list(lb=c(dlaimax=0.0005, durvieF=50),
ub=c(dlaimax=0.0025, durvieF=400))
# Set options for the parameter estimation method
optim_options=list()
optim_options$nb_rep <- 2 # How many times we run the minimization with different parameters
optim_options$xtol_rel <- 1e-05 # Tolerance criterion between two iterations
optim_options$maxeval <- 20 # Maximum number of iterations executed by the function
optim_options$path_results <- model_options$data_dir # path where to store results graphs
# Run the optimization
param_est_values=main_optim(obs_list=obs_list,crit_function=concentrated_wss,
model_function=stics_wrapper,
model_options=model_options,
optim_options=optim_options,
prior_information=prior_information)
# Run the model after optimzation
sim_after_optim=stics_wrapper(param_values=param_est_values,model_options=model_options)
# Plot the results
dev.new()
par(mfrow = c(1,2))
Ymax=max(max(obs_list[[sit_name]][,var_name], na.rm=TRUE),
max(sim_before_optim$sim_list[[sit_name]][,var_name], na.rm=TRUE))
plot(sim_before_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="Before optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
plot(sim_after_optim$sim_list[[sit_name]][,c("Date",var_name)],type="l",
main="After optimization",ylim=c(0,Ymax+Ymax*0.1))
points(obs_list[[sit_name]],col="green")
stics_wrapper
pkgdown::build_site()
